# Generated by Django 4.1.7 on 2023-04-01 19:46

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nom', models.CharField(max_length=30)),
                ('prenom', models.CharField(max_length=30)),
                ('telephone1', models.CharField(max_length=30)),
                ('telephone2', models.CharField(blank=True, max_length=30, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'utilisateur',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Eleve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('prenom', models.CharField(max_length=50)),
                ('date_naissance', models.DateField()),
                ('classe', models.CharField(max_length=50)),
                ('ecole', models.CharField(max_length=50)),
                ('difficulte', models.TextField()),
                ('lieu_travail', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Tuteur',
            fields=[
                ('utilisateur_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('profession', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'tuteur',
            },
            bases=('comptes.utilisateur',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Encadrement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comptes.eleve')),
            ],
        ),
        migrations.CreateModel(
            name='Professeur',
            fields=[
                ('utilisateur_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('date_naissance', models.DateField()),
                ('adresse', models.CharField(max_length=50)),
                ('statut', models.CharField(max_length=30)),
                ('universite', models.CharField(blank=True, max_length=30, null=True)),
                ('filiere_etude', models.CharField(blank=True, max_length=30, null=True)),
                ('annee_etude', models.CharField(blank=True, max_length=30, null=True)),
                ('dernier_diplome', models.CharField(max_length=100)),
                ('filiere_dernier_diplome', models.CharField(max_length=100)),
                ('jours_disponibles', models.CharField(max_length=100)),
                ('matieres_generales_enseignables', models.CharField(max_length=100)),
                ('classes_generales_enseignables', models.CharField(max_length=100)),
                ('classes_techniques_enseignables', models.CharField(blank=True, max_length=100, null=True)),
                ('matieres_techniques_enseignables', models.CharField(blank=True, max_length=100, null=True)),
                ('zones_travail', models.CharField(max_length=100)),
                ('periode_journee', models.CharField(max_length=50)),
                ('piece_jointe', models.FileField(upload_to='piece_jointes/')),
                ('eleves', models.ManyToManyField(through='comptes.Encadrement', to='comptes.eleve')),
            ],
            options={
                'db_table': 'professeur',
            },
            bases=('comptes.utilisateur',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='encadrement',
            name='professeur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comptes.professeur'),
        ),
        migrations.AddField(
            model_name='eleve',
            name='tuteur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comptes.tuteur'),
        ),
    ]
